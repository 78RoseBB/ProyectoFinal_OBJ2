<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCACHAIkDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAorJ8TeKtJ8G6TPqes30On2UKl3llbHAGTgdT
        +FfKvxp/bml0fwbNrXw+0211eyTDNqF3JhBFnDSKo67eTg88dK8/FY/DYO3t52b0S6nfhcBicZf2ELpb
        vofX7MFGScD1NZV94s0XSyRd6tZWxHUSTqv9a/Lvx98fPHnjzwn4pu5fHNxdLp8lvKF00PbrtJO5AAFD
        KR39q5/RbW1+IU3ieHWorix1/ULP/R7O7lDYt2iHlSREE5Yjaxx8wJIr5jEcSqEeelSuvPR9OnzPqcPw
        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
        AooooAKKKKACiiigAooooA//2Q==
</value>
  </data>
</root>